#! /bin/bash

# Title of the wiki
read -p "Title of the wiki (will be shown on the main page): " MW_WIKINAME;

# Name of the project
read -p "Name of the project (a-z, no spaces, will only be used for directory names): " PROJECT;

# Root password for the database in the container
read -s -p  "Root password for the database in the container: " MYSQL_ROOT_PASSWORD;
echo "";

# DB user password, used by the wiki
read -s -p "DB user password, used by the wiki: " MYSQL_PASSWORD;
echo "";

# Password for wiki sysop
read -s -p "Password for wiki sysop (min. 8 chars): " MW_PASSWORD;
echo "";

# Email for wiki sysop
read -p "Email for wiki sysop: " MW_EMAIL;
echo "";

# Database name
read -p "Database name (will be created): " MYSQL_DATABASE;
echo "";

# Database dump file to import
#read -p "Database dump file to import: " MYSQL_DUMP;
#echo "";

# Media directory to import
#read -p "Media directory to import: " MEDIA;
#echo "";

# Name of the container with the wiki
SMW_CONTAINER=$PROJECT-smw
read -p "Name of the container with the wiki (Default $SMW_CONTAINER): " ANSWER_1;
if [ ${ANSWER_1} ];
then SMW_CONTAINER=$ANSWER_1;
fi
echo "";

# Name of the container with the database
DB_CONTAINER=$PROJECT-db
read -p "Name of the container with the database (Default $DB_CONTAINER): " ANSWER_2;
if [ ${ANSWER_2} ];
then DB_CONTAINER=$ANSWER_2;
fi
echo "";

# Own network, to be able to address each other by name
NETWORK=$PROJECT-nw
read -p "Own network, to be able to address each other by name (Default $NETWORK): " ANSWER_3;
if [ ${ANSWER_3} ];
then NETWORK=$ANSWER_3;
fi
echo "";

# Where to put uploaded files. Path on the host, relative to where the container was started.
UPLOAD_MOUNT=$PROJECT-mount/upload
read -p "Where to put uploaded files (on the host). Path on the host, relative to where the container was started (default $UPLOAD_MOUNT): " ANSWER_4;
if [ ${ANSWER_4} ];
then UPLOAD_MOUNT=$ANSWER_4;
fi
echo "";

# Where to store the database.
DB_MOUNT=$PROJECT-mount/db
read -p "Where to store the database (on the host). Path on the host, relative to where the container was started (Default $DB_MOUNT): " ANSWER_5;
if [ ${ANSWER_5} ];
then DB_MOUNT=$ANSWER_5;
fi
echo "";

# Where to put configuration files. Path on the host, relative to where the container was started.
CONFIG_MOUNT=$PROJECT-mount/config
read -p "Where to put config files (on the host). Path on the host, relative to where the container was started (default $CONFIG_MOUNT): " ANSWER_6;
if [ ${ANSWER_6} ];
then CONFIG_MOUNT=$ANSWER_6;
fi
echo "";

# Where to deploy the wiki for testing
#read -p "IP of the server used for testing: " TEST_SERVER_IP;
#echo "";

# Where to deploy the wiki for testing
#TEST_SERVER_PATH=/local/docker/test-$PROJECT
#read -p "Path on the test server: (Default $TEST_SERVER_PATH): " ANSWER_6;
#if [ ${ANSWER_6} ];
#then TEST_SERVER_PATH=$ANSWER_6;
#fi
#echo "";

## Create config.ini file
cp docker-SemanticMediaWiki/install/example.ini config.ini;
sed -i "s|@@PROJECT@@|$PROJECT|g" config.ini
sed -i "s|@@MW_WIKINAME@@|$MW_WIKINAME|g" config.ini
sed -i "s|@@MYSQL_ROOT_PASSWORD@@|$MYSQL_ROOT_PASSWORD|g" config.ini
sed -i "s|@@MYSQL_PASSWORD@@|$MYSQL_PASSWORD|g" config.ini
sed -i "s|@@MW_PASSWORD@@|$MW_PASSWORD|g" config.ini
sed -i "s|@@MW_EMAIL@@|$MW_EMAIL|g" config.ini
sed -i "s|@@MYSQL_DATABASE@@|$MYSQL_DATABASE|g" config.ini
#sed -i "s|@@MYSQL_DUMP@@|$MYSQL_DUMP|g" config.ini
#sed -i "s|@@MEDIA@@|$MEDIA|g" config.ini
sed -i "s|@@SMW_CONTAINER@@|$SMW_CONTAINER|g" config.ini
sed -i "s|@@DB_CONTAINER@@|$DB_CONTAINER|g" config.ini
sed -i "s|@@NETWORK@@|$NETWORK|g" config.ini
sed -i "s|@@CONFIG_MOUNT@@|$CONFIG_MOUNT|g" config.ini
sed -i "s|@@UPLOAD_MOUNT@@|$UPLOAD_MOUNT|g" config.ini
sed -i "s|@@DB_MOUNT@@|$DB_MOUNT|g" config.ini
#sed -i "s|@@TEST_SERVER_IP@@|$TEST_SERVER_IP|g" config.ini
#sed -i "s|@@TEST_SERVER_PATH@@|$TEST_SERVER_PATH|g" config.ini

echo "Saved configuration file to config.ini"

